name: MATLAB Code Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: MATLAB Code Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        
      - name: Run MATLAB Command
        uses: matlab-actions/run-command@v1
        with:
          command: |
            % Add all directories to path
            addpath(genpath(pwd));
            
            % List all .m files
            files = dir('**/*.m');
            
            % Initialize results
            results = struct('file', {}, 'issues', {});
            
            % Check each file
            for i = 1:length(files)
                filename = fullfile(files(i).folder, files(i).name);
                disp(['Checking ' filename]);
                
                % Read file content
                fid = fopen(filename, 'r');
                if fid == -1
                    warning(['Could not open ' filename]);
                    continue;
                end
                content = fscanf(fid, '%c');
                fclose(fid);
                
                % Check for common issues
                issues = {};
                
                % Check for hardcoded magic numbers
                if ~isempty(regexp(content, '\s[0-9]+\.[0-9]+\s', 'once'))
                    issues{end+1} = 'Contains hardcoded magic numbers';
                end
                
                % Check for very long lines
                lines = strsplit(content, '\n');
                longLines = find(cellfun(@length, lines) > 100);
                if ~isempty(longLines)
                    issues{end+1} = sprintf('Contains %d lines longer than 100 characters', length(longLines));
                end
                
                % Store results if issues found
                if ~isempty(issues)
                    results(end+1).file = filename;
                    results(end).issues = issues;
                end
            end
            
            % Display results
            disp('Linting results:');
            if isempty(results)
                disp('No issues found!');
            else
                for i = 1:length(results)
                    disp(['File: ' results(i).file]);
                    for j = 1:length(results(i).issues)
                        disp(['  - ' results(i).issues{j}]);
                    end
                end
            end
            
            % Exit with success status (this is just a report, not enforcing)
            exit(0);